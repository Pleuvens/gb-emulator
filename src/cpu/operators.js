import CPU from './cpu.js';
import MemoryInterfacing from '../memory_interfacing/memory_interfacing.js'

let Ops = {
    /*--- Load/store ---*/
    LDrr_bb: function() { CPU._r.b=CPU._r.b; CPU._r.m=1; CPU._r.t=4; },
    LDrr_bc: function() { CPU._r.b=CPU._r.c; CPU._r.m=1; CPU._r.t=4; },
    LDrr_bd: function() { CPU._r.b=CPU._r.d; CPU._r.m=1; CPU._r.t=4; },
    LDrr_be: function() { CPU._r.b=CPU._r.e; CPU._r.m=1; CPU._r.t=4; },
    LDrr_bh: function() { CPU._r.b=CPU._r.h; CPU._r.m=1; CPU._r.t=4; },
    LDrr_bl: function() { CPU._r.b=CPU._r.l; CPU._r.m=1; CPU._r.t=4; },
    LDrr_ba: function() { CPU._r.b=CPU._r.a; CPU._r.m=1; CPU._r.t=4; },
    LDrr_cb: function() { CPU._r.c=CPU._r.b; CPU._r.m=1; CPU._r.t=4; },
    LDrr_cc: function() { CPU._r.c=CPU._r.c; CPU._r.m=1; CPU._r.t=4; },
    LDrr_cd: function() { CPU._r.c=CPU._r.d; CPU._r.m=1; CPU._r.t=4; },
    LDrr_ce: function() { CPU._r.c=CPU._r.e; CPU._r.m=1; CPU._r.t=4; },
    LDrr_ch: function() { CPU._r.c=CPU._r.h; CPU._r.m=1; CPU._r.t=4; },
    LDrr_cl: function() { CPU._r.c=CPU._r.l; CPU._r.m=1; CPU._r.t=4; },
    LDrr_ca: function() { CPU._r.c=CPU._r.a; CPU._r.m=1; CPU._r.t=4; },
    LDrr_db: function() { CPU._r.d=CPU._r.b; CPU._r.m=1; CPU._r.t=4; },
    LDrr_dc: function() { CPU._r.d=CPU._r.c; CPU._r.m=1; CPU._r.t=4; },
    LDrr_dd: function() { CPU._r.d=CPU._r.d; CPU._r.m=1; CPU._r.t=4; },
    LDrr_de: function() { CPU._r.d=CPU._r.e; CPU._r.m=1; CPU._r.t=4; },
    LDrr_dh: function() { CPU._r.d=CPU._r.h; CPU._r.m=1; CPU._r.t=4; },
    LDrr_dl: function() { CPU._r.d=CPU._r.l; CPU._r.m=1; CPU._r.t=4; },
    LDrr_da: function() { CPU._r.d=CPU._r.a; CPU._r.m=1; CPU._r.t=4; },
    LDrr_eb: function() { CPU._r.e=CPU._r.b; CPU._r.m=1; CPU._r.t=4; },
    LDrr_ec: function() { CPU._r.e=CPU._r.c; CPU._r.m=1; CPU._r.t=4; },
    LDrr_ed: function() { CPU._r.e=CPU._r.d; CPU._r.m=1; CPU._r.t=4; },
    LDrr_ee: function() { CPU._r.e=CPU._r.e; CPU._r.m=1; CPU._r.t=4; },
    LDrr_eh: function() { CPU._r.e=CPU._r.h; CPU._r.m=1; CPU._r.t=4; },
    LDrr_el: function() { CPU._r.e=CPU._r.l; CPU._r.m=1; CPU._r.t=4; },
    LDrr_ea: function() { CPU._r.e=CPU._r.a; CPU._r.m=1; CPU._r.t=4; },
    LDrr_hb: function() { CPU._r.h=CPU._r.b; CPU._r.m=1; CPU._r.t=4; },
    LDrr_hc: function() { CPU._r.h=CPU._r.c; CPU._r.m=1; CPU._r.t=4; },
    LDrr_hd: function() { CPU._r.h=CPU._r.d; CPU._r.m=1; CPU._r.t=4; },
    LDrr_he: function() { CPU._r.h=CPU._r.e; CPU._r.m=1; CPU._r.t=4; },
    LDrr_hh: function() { CPU._r.h=CPU._r.h; CPU._r.m=1; CPU._r.t=4; },
    LDrr_hl: function() { CPU._r.h=CPU._r.l; CPU._r.m=1; CPU._r.t=4; },
    LDrr_ha: function() { CPU._r.h=CPU._r.a; CPU._r.m=1; CPU._r.t=4; },
    LDrr_lb: function() { CPU._r.l=CPU._r.b; CPU._r.m=1; CPU._r.t=4; },
    LDrr_lc: function() { CPU._r.l=CPU._r.c; CPU._r.m=1; CPU._r.t=4; },
    LDrr_ld: function() { CPU._r.l=CPU._r.d; CPU._r.m=1; CPU._r.t=4; },
    LDrr_le: function() { CPU._r.l=CPU._r.e; CPU._r.m=1; CPU._r.t=4; },
    LDrr_lh: function() { CPU._r.l=CPU._r.h; CPU._r.m=1; CPU._r.t=4; },
    LDrr_ll: function() { CPU._r.l=CPU._r.l; CPU._r.m=1; CPU._r.t=4; },
    LDrr_la: function() { CPU._r.l=CPU._r.a; CPU._r.m=1; CPU._r.t=4; },
    LDrr_ab: function() { CPU._r.a=CPU._r.b; CPU._r.m=1; CPU._r.t=4; },
    LDrr_ac: function() { CPU._r.a=CPU._r.c; CPU._r.m=1; CPU._r.t=4; },
    LDrr_ad: function() { CPU._r.a=CPU._r.d; CPU._r.m=1; CPU._r.t=4; },
    LDrr_ae: function() { CPU._r.a=CPU._r.e; CPU._r.m=1; CPU._r.t=4; },
    LDrr_ah: function() { CPU._r.a=CPU._r.h; CPU._r.m=1; CPU._r.t=4; },
    LDrr_al: function() { CPU._r.a=CPU._r.l; CPU._r.m=1; CPU._r.t=4; },
    LDrr_aa: function() { CPU._r.a=CPU._r.a; CPU._r.m=1; CPU._r.t=4; },

    LDrHLm_b: function() { CPU._r.b=MemoryInterfacing.rb((CPU._r.h<<8)+CPU._r.l); CPU._r.m=2; CPU._r.t=8; },
    LDrHLm_c: function() { CPU._r.c=MemoryInterfacing.rb((CPU._r.h<<8)+CPU._r.l); CPU._r.m=2; CPU._r.t=8; },
    LDrHLm_d: function() { CPU._r.d=MemoryInterfacing.rb((CPU._r.h<<8)+CPU._r.l); CPU._r.m=2; CPU._r.t=8; },
    LDrHLm_e: function() { CPU._r.e=MemoryInterfacing.rb((CPU._r.h<<8)+CPU._r.l); CPU._r.m=2; CPU._r.t=8; },
    LDrHLm_h: function() { CPU._r.h=MemoryInterfacing.rb((CPU._r.h<<8)+CPU._r.l); CPU._r.m=2; CPU._r.t=8; },
    LDrHLm_l: function() { CPU._r.l=MemoryInterfacing.rb((CPU._r.h<<8)+CPU._r.l); CPU._r.m=2; CPU._r.t=8; },
    LDrHLm_a: function() { CPU._r.a=MemoryInterfacing.rb((CPU._r.h<<8)+CPU._r.l); CPU._r.m=2; CPU._r.t=8; },

    LDHLmr_b: function() { MemoryInterfacing.wb((CPU._r.h<<8)+CPU._r.l,CPU._r.b); CPU._r.m=2; CPU._r.t=8; },
    LDHLmr_c: function() { MemoryInterfacing.wb((CPU._r.h<<8)+CPU._r.l,CPU._r.c); CPU._r.m=2; CPU._r.t=8; },
    LDHLmr_d: function() { MemoryInterfacing.wb((CPU._r.h<<8)+CPU._r.l,CPU._r.d); CPU._r.m=2; CPU._r.t=8; },
    LDHLmr_e: function() { MemoryInterfacing.wb((CPU._r.h<<8)+CPU._r.l,CPU._r.e); CPU._r.m=2; CPU._r.t=8; },
    LDHLmr_h: function() { MemoryInterfacing.wb((CPU._r.h<<8)+CPU._r.l,CPU._r.h); CPU._r.m=2; CPU._r.t=8; },
    LDHLmr_l: function() { MemoryInterfacing.wb((CPU._r.h<<8)+CPU._r.l,CPU._r.l); CPU._r.m=2; CPU._r.t=8; },
    LDHLmr_a: function() { MemoryInterfacing.wb((CPU._r.h<<8)+CPU._r.l,CPU._r.a); CPU._r.m=2; CPU._r.t=8; },

    LDrn_b: function() { CPU._r.b=MemoryInterfacing.rb(CPU._r.pc); CPU._r.pc++; CPU._r.m=2; CPU._r.t=8; },
    LDrn_c: function() { CPU._r.c=MemoryInterfacing.rb(CPU._r.pc); CPU._r.pc++; CPU._r.m=2; CPU._r.t=8; },
    LDrn_d: function() { CPU._r.d=MemoryInterfacing.rb(CPU._r.pc); CPU._r.pc++; CPU._r.m=2; CPU._r.t=8; },
    LDrn_e: function() { CPU._r.e=MemoryInterfacing.rb(CPU._r.pc); CPU._r.pc++; CPU._r.m=2; CPU._r.t=8; },
    LDrn_h: function() { CPU._r.h=MemoryInterfacing.rb(CPU._r.pc); CPU._r.pc++; CPU._r.m=2; CPU._r.t=8; },
    LDrn_l: function() { CPU._r.l=MemoryInterfacing.rb(CPU._r.pc); CPU._r.pc++; CPU._r.m=2; CPU._r.t=8; },
    LDrn_a: function() { CPU._r.a=MemoryInterfacing.rb(CPU._r.pc); CPU._r.pc++; CPU._r.m=2; CPU._r.t=8; },

    LDHLmn: function() { MemoryInterfacing.wb((CPU._r.h<<8)+CPU._r.l, MemoryInterfacing.rb(CPU._r.pc)); CPU._r.pc++; CPU._r.m=3; CPU._r.t=12; },

    LDBCmA: function() { MemoryInterfacing.wb((CPU._r.b<<8)+CPU._r.c, CPU._r.a); CPU._r.m=2; CPU._r.t=8; },
    LDDEmA: function() { MemoryInterfacing.wb((CPU._r.d<<8)+CPU._r.e, CPU._r.a); CPU._r.m=2; CPU._r.t=8; },

    LDmmA: function() { MemoryInterfacing.wb(MemoryInterfacing.rw(CPU._r.pc), CPU._r.a); CPU._r.pc+=2; CPU._r.m=4; CPU._r.t=16; },

    LDABCm: function() { CPU._r.a=MemoryInterfacing.rb((CPU._r.b<<8)+CPU._r.c); CPU._r.m=2; CPU._r.t=8; },
    LDADEm: function() { CPU._r.a=MemoryInterfacing.rb((CPU._r.d<<8)+CPU._r.e); CPU._r.m=2; CPU._r.t=8; },

    LDAmm: function() { CPU._r.a=MemoryInterfacing.rb(MemoryInterfacing.rw(CPU._r.pc)); CPU._r.pc+=2; CPU._r.m=4; CPU._r.t=16; },

    LDBCnn: function() { CPU._r.c=MemoryInterfacing.rb(CPU._r.pc); CPU._r.b=MemoryInterfacing.rb(CPU._r.pc+1); CPU._r.pc+=2; CPU._r.m=3; CPU._r.t=12; },
    LDDEnn: function() { CPU._r.e=MemoryInterfacing.rb(CPU._r.pc); CPU._r.d=MemoryInterfacing.rb(CPU._r.pc+1); CPU._r.pc+=2; CPU._r.m=3; CPU._r.t=12; },
    LDHLnn: function() { CPU._r.l=MemoryInterfacing.rb(CPU._r.pc); CPU._r.h=MemoryInterfacing.rb(CPU._r.pc+1); CPU._r.pc+=2; CPU._r.m=3; CPU._r.t=12; },
    LDSPnn: function() { CPU._r.sp=MemoryInterfacing.rw(CPU._r.pc); CPU._r.pc+=2; CPU._r.m=3; CPU._r.t=12; },

    LDHLmm: function() { let i=MemoryInterfacing.rw(CPU._r.pc); CPU._r.pc+=2; CPU._r.l=MemoryInterfacing.rb(i); CPU._r.h=MemoryInterfacing.rb(i+1); CPU._r.m=5; CPU._r.t=20; },
    LDmmHL: function() { let i=MemoryInterfacing.rw(CPU._r.pc); CPU._r.pc+=2; MemoryInterfacing.ww(i,(CPU._r.h<<8)+CPU._r.l); CPU._r.m=5; CPU._r.t=20; },

    LDHLIA: function() { MemoryInterfacing.wb((CPU._r.h<<8)+CPU._r.l, CPU._r.a); CPU._r.l=(CPU._r.l+1)&255; if(!CPU._r.l) CPU._r.h=(CPU._r.h+1)&255; CPU._r.m=2; CPU._r.t=8; },
    LDAHLI: function() { CPU._r.a=MemoryInterfacing.rb((CPU._r.h<<8)+CPU._r.l); CPU._r.l=(CPU._r.l+1)&255; if(!CPU._r.l) CPU._r.h=(CPU._r.h+1)&255; CPU._r.m=2; CPU._r.t=8; },

    LDHLDA: function() { MemoryInterfacing.wb((CPU._r.h<<8)+CPU._r.l, CPU._r.a); CPU._r.l=(CPU._r.l-1)&255; if(CPU._r.l===255) CPU._r.h=(CPU._r.h-1)&255; CPU._r.m=2; CPU._r.t=8; },
    LDAHLD: function() { CPU._r.a=MemoryInterfacing.rb((CPU._r.h<<8)+CPU._r.l); CPU._r.l=(CPU._r.l-1)&255; if(CPU._r.l===255) CPU._r.h=(CPU._r.h-1)&255; CPU._r.m=2; CPU._r.t=8; },

    LDAIOn: function() { CPU._r.a=MemoryInterfacing.rb(0xFF00+MemoryInterfacing.rb(CPU._r.pc)); CPU._r.pc++; CPU._r.m=3; CPU._r.t=12; },
    LDIOnA: function() { MemoryInterfacing.wb(0xFF00+MemoryInterfacing.rb(CPU._r.pc),CPU._r.a); CPU._r.pc++; CPU._r.m=3; CPU._r.t=12; },
    LDAIOC: function() { CPU._r.a=MemoryInterfacing.rb(0xFF00+CPU._r.c); CPU._r.m=2; CPU._r.t=8; },
    LDIOCA: function() { MemoryInterfacing.wb(0xFF00+CPU._r.c,CPU._r.a); CPU._r.m=2; CPU._r.t=8; },

    LDHLSPn: function() { let i=MemoryInterfacing.rb(CPU._r.pc); if(i>127) i=-((~i+1)&255); CPU._r.pc++; i+=CPU._r.sp; CPU._r.h=(i>>8)&255; CPU._r.l=i&255; CPU._r.m=3; CPU._r.t=12; },

    SWAPr_b: function() { let tr=CPU._r.b; CPU._r.b=MemoryInterfacing.rb((CPU._r.h<<8)+CPU._r.l); MemoryInterfacing.wb((CPU._r.h<<8)+CPU._r.l,tr); CPU._r.m=4; CPU._r.t=16; },
    SWAPr_c: function() { let tr=CPU._r.c; CPU._r.c=MemoryInterfacing.rb((CPU._r.h<<8)+CPU._r.l); MemoryInterfacing.wb((CPU._r.h<<8)+CPU._r.l,tr); CPU._r.m=4; CPU._r.t=16; },
    SWAPr_d: function() { let tr=CPU._r.d; CPU._r.d=MemoryInterfacing.rb((CPU._r.h<<8)+CPU._r.l); MemoryInterfacing.wb((CPU._r.h<<8)+CPU._r.l,tr); CPU._r.m=4; CPU._r.t=16; },
    SWAPr_e: function() { let tr=CPU._r.e; CPU._r.e=MemoryInterfacing.rb((CPU._r.h<<8)+CPU._r.l); MemoryInterfacing.wb((CPU._r.h<<8)+CPU._r.l,tr); CPU._r.m=4; CPU._r.t=16; },
    SWAPr_h: function() { let tr=CPU._r.h; CPU._r.h=MemoryInterfacing.rb((CPU._r.h<<8)+CPU._r.l); MemoryInterfacing.wb((CPU._r.h<<8)+CPU._r.l,tr); CPU._r.m=4; CPU._r.t=16; },
    SWAPr_l: function() { let tr=CPU._r.l; CPU._r.l=MemoryInterfacing.rb((CPU._r.h<<8)+CPU._r.l); MemoryInterfacing.wb((CPU._r.h<<8)+CPU._r.l,tr); CPU._r.m=4; CPU._r.t=16; },
    SWAPr_a: function() { let tr=CPU._r.a; CPU._r.a=MemoryInterfacing.rb((CPU._r.h<<8)+CPU._r.l); MemoryInterfacing.wb((CPU._r.h<<8)+CPU._r.l,tr); CPU._r.m=4; CPU._r.t=16; },

    /*--- Data processing ---*/
    ADDr_b: function() { CPU._r.a+=CPU._r.b; Ops.fz(CPU._r.a); if(CPU._r.a>255) CPU._r.f|=0x10; CPU._r.a&=255; CPU._r.m=1; CPU._r.t=4; },
    ADDr_c: function() { CPU._r.a+=CPU._r.c; Ops.fz(CPU._r.a); if(CPU._r.a>255) CPU._r.f|=0x10; CPU._r.a&=255; CPU._r.m=1; CPU._r.t=4; },
    ADDr_d: function() { CPU._r.a+=CPU._r.d; Ops.fz(CPU._r.a); if(CPU._r.a>255) CPU._r.f|=0x10; CPU._r.a&=255; CPU._r.m=1; CPU._r.t=4; },
    ADDr_e: function() { CPU._r.a+=CPU._r.e; Ops.fz(CPU._r.a); if(CPU._r.a>255) CPU._r.f|=0x10; CPU._r.a&=255; CPU._r.m=1; CPU._r.t=4; },
    ADDr_h: function() { CPU._r.a+=CPU._r.h; Ops.fz(CPU._r.a); if(CPU._r.a>255) CPU._r.f|=0x10; CPU._r.a&=255; CPU._r.m=1; CPU._r.t=4; },
    ADDr_l: function() { CPU._r.a+=CPU._r.l; Ops.fz(CPU._r.a); if(CPU._r.a>255) CPU._r.f|=0x10; CPU._r.a&=255; CPU._r.m=1; CPU._r.t=4; },
    ADDr_a: function() { CPU._r.a+=CPU._r.a; Ops.fz(CPU._r.a); if(CPU._r.a>255) CPU._r.f|=0x10; CPU._r.a&=255; CPU._r.m=1; CPU._r.t=4; },
    ADDHL: function() { CPU._r.a+=MemoryInterfacing.rb((CPU._r.h<<8)+CPU._r.l); Ops.fz(CPU._r.a); if(CPU._r.a>255) CPU._r.f|=0x10; CPU._r.a&=255; CPU._r.m=2; CPU._r.t=8; },
    ADDn: function() { CPU._r.a+=MemoryInterfacing.rb(CPU._r.pc); CPU._r.pc++; Ops.fz(CPU._r.a); if(CPU._r.a>255) CPU._r.f|=0x10; CPU._r.a&=255; CPU._r.m=2; CPU._r.t=8; },
    ADDHLBC: function() { let hl=(CPU._r.h<<8)+CPU._r.l; hl+=(CPU._r.b<<8)+CPU._r.c; if(hl>65535) CPU._r.f|=0x10; else CPU._r.f&=0xEF; CPU._r.h=(hl>>8)&255; CPU._r.l=hl&255; CPU._r.m=3; CPU._r.t=12; },
    ADDHLDE: function() { let hl=(CPU._r.h<<8)+CPU._r.l; hl+=(CPU._r.d<<8)+CPU._r.e; if(hl>65535) CPU._r.f|=0x10; else CPU._r.f&=0xEF; CPU._r.h=(hl>>8)&255; CPU._r.l=hl&255; CPU._r.m=3; CPU._r.t=12; },
    ADDHLHL: function() { let hl=(CPU._r.h<<8)+CPU._r.l; hl+=(CPU._r.h<<8)+CPU._r.l; if(hl>65535) CPU._r.f|=0x10; else CPU._r.f&=0xEF; CPU._r.h=(hl>>8)&255; CPU._r.l=hl&255; CPU._r.m=3; CPU._r.t=12; },
    ADDHLSP: function() { let hl=(CPU._r.h<<8)+CPU._r.l; hl+=CPU._r.sp; if(hl>65535) CPU._r.f|=0x10; else CPU._r.f&=0xEF; CPU._r.h=(hl>>8)&255; CPU._r.l=hl&255; CPU._r.m=3; CPU._r.t=12; },
    ADDSPn: function() { let i=MemoryInterfacing.rb(CPU._r.pc); if(i>127) i=-((~i+1)&255); CPU._r.pc++; CPU._r.sp+=i; CPU._r.m=4; CPU._r.t=16; },

    ADCr_b: function() { CPU._r.a+=CPU._r.b; CPU._r.a+=(CPU._r.f&0x10)?1:0; Ops.fz(CPU._r.a); if(CPU._r.a>255) CPU._r.f|=0x10; CPU._r.a&=255; CPU._r.m=1; CPU._r.t=4; },
    ADCr_c: function() { CPU._r.a+=CPU._r.c; CPU._r.a+=(CPU._r.f&0x10)?1:0; Ops.fz(CPU._r.a); if(CPU._r.a>255) CPU._r.f|=0x10; CPU._r.a&=255; CPU._r.m=1; CPU._r.t=4; },
    ADCr_d: function() { CPU._r.a+=CPU._r.d; CPU._r.a+=(CPU._r.f&0x10)?1:0; Ops.fz(CPU._r.a); if(CPU._r.a>255) CPU._r.f|=0x10; CPU._r.a&=255; CPU._r.m=1; CPU._r.t=4; },
    ADCr_e: function() { CPU._r.a+=CPU._r.e; CPU._r.a+=(CPU._r.f&0x10)?1:0; Ops.fz(CPU._r.a); if(CPU._r.a>255) CPU._r.f|=0x10; CPU._r.a&=255; CPU._r.m=1; CPU._r.t=4; },
    ADCr_h: function() { CPU._r.a+=CPU._r.h; CPU._r.a+=(CPU._r.f&0x10)?1:0; Ops.fz(CPU._r.a); if(CPU._r.a>255) CPU._r.f|=0x10; CPU._r.a&=255; CPU._r.m=1; CPU._r.t=4; },
    ADCr_l: function() { CPU._r.a+=CPU._r.l; CPU._r.a+=(CPU._r.f&0x10)?1:0; Ops.fz(CPU._r.a); if(CPU._r.a>255) CPU._r.f|=0x10; CPU._r.a&=255; CPU._r.m=1; CPU._r.t=4; },
    ADCr_a: function() { CPU._r.a+=CPU._r.a; CPU._r.a+=(CPU._r.f&0x10)?1:0; Ops.fz(CPU._r.a); if(CPU._r.a>255) CPU._r.f|=0x10; CPU._r.a&=255; CPU._r.m=1; CPU._r.t=4; },
    ADCHL: function() { CPU._r.a+=MemoryInterfacing.rb((CPU._r.h<<8)+CPU._r.l); CPU._r.a+=(CPU._r.f&0x10)?1:0; Ops.fz(CPU._r.a); if(CPU._r.a>255) CPU._r.f|=0x10; CPU._r.a&=255; CPU._r.m=2; CPU._r.t=8; },
    ADCn: function() { CPU._r.a+=MemoryInterfacing.rb(CPU._r.pc); CPU._r.pc++; CPU._r.a+=(CPU._r.f&0x10)?1:0; Ops.fz(CPU._r.a); if(CPU._r.a>255) CPU._r.f|=0x10; CPU._r.a&=255; CPU._r.m=2; CPU._r.t=8; },

    SUBr_b: function() { CPU._r.a-=CPU._r.b; Ops.fz(CPU._r.a,1); if(CPU._r.a<0) CPU._r.f|=0x10; CPU._r.a&=255; CPU._r.m=1; CPU._r.t=4; },
    SUBr_c: function() { CPU._r.a-=CPU._r.c; Ops.fz(CPU._r.a,1); if(CPU._r.a<0) CPU._r.f|=0x10; CPU._r.a&=255; CPU._r.m=1; CPU._r.t=4; },
    SUBr_d: function() { CPU._r.a-=CPU._r.d; Ops.fz(CPU._r.a,1); if(CPU._r.a<0) CPU._r.f|=0x10; CPU._r.a&=255; CPU._r.m=1; CPU._r.t=4; },
    SUBr_e: function() { CPU._r.a-=CPU._r.e; Ops.fz(CPU._r.a,1); if(CPU._r.a<0) CPU._r.f|=0x10; CPU._r.a&=255; CPU._r.m=1; CPU._r.t=4; },
    SUBr_h: function() { CPU._r.a-=CPU._r.h; Ops.fz(CPU._r.a,1); if(CPU._r.a<0) CPU._r.f|=0x10; CPU._r.a&=255; CPU._r.m=1; CPU._r.t=4; },
    SUBr_l: function() { CPU._r.a-=CPU._r.l; Ops.fz(CPU._r.a,1); if(CPU._r.a<0) CPU._r.f|=0x10; CPU._r.a&=255; CPU._r.m=1; CPU._r.t=4; },
    SUBr_a: function() { CPU._r.a-=CPU._r.a; Ops.fz(CPU._r.a,1); if(CPU._r.a<0) CPU._r.f|=0x10; CPU._r.a&=255; CPU._r.m=1; CPU._r.t=4; },
    SUBHL: function() { CPU._r.a-=MemoryInterfacing.rb((CPU._r.h<<8)+CPU._r.l); Ops.fz(CPU._r.a,1); if(CPU._r.a<0) CPU._r.f|=0x10; CPU._r.a&=255; CPU._r.m=2; CPU._r.t=8; },
    SUBn: function() { CPU._r.a-=MemoryInterfacing.rb(CPU._r.pc); CPU._r.pc++; Ops.fz(CPU._r.a,1); if(CPU._r.a<0) CPU._r.f|=0x10; CPU._r.a&=255; CPU._r.m=2; CPU._r.t=8; },

    SBCr_b: function() { CPU._r.a-=CPU._r.b; CPU._r.a-=(CPU._r.f&0x10)?1:0; Ops.fz(CPU._r.a,1); if(CPU._r.a<0) CPU._r.f|=0x10; CPU._r.a&=255; CPU._r.m=1; CPU._r.t=4; },
    SBCr_c: function() { CPU._r.a-=CPU._r.c; CPU._r.a-=(CPU._r.f&0x10)?1:0; Ops.fz(CPU._r.a,1); if(CPU._r.a<0) CPU._r.f|=0x10; CPU._r.a&=255; CPU._r.m=1; CPU._r.t=4; },
    SBCr_d: function() { CPU._r.a-=CPU._r.d; CPU._r.a-=(CPU._r.f&0x10)?1:0; Ops.fz(CPU._r.a,1); if(CPU._r.a<0) CPU._r.f|=0x10; CPU._r.a&=255; CPU._r.m=1; CPU._r.t=4; },
    SBCr_e: function() { CPU._r.a-=CPU._r.e; CPU._r.a-=(CPU._r.f&0x10)?1:0; Ops.fz(CPU._r.a,1); if(CPU._r.a<0) CPU._r.f|=0x10; CPU._r.a&=255; CPU._r.m=1; CPU._r.t=4; },
    SBCr_h: function() { CPU._r.a-=CPU._r.h; CPU._r.a-=(CPU._r.f&0x10)?1:0; Ops.fz(CPU._r.a,1); if(CPU._r.a<0) CPU._r.f|=0x10; CPU._r.a&=255; CPU._r.m=1; CPU._r.t=4; },
    SBCr_l: function() { CPU._r.a-=CPU._r.l; CPU._r.a-=(CPU._r.f&0x10)?1:0; Ops.fz(CPU._r.a,1); if(CPU._r.a<0) CPU._r.f|=0x10; CPU._r.a&=255; CPU._r.m=1; CPU._r.t=4; },
    SBCr_a: function() { CPU._r.a-=CPU._r.a; CPU._r.a-=(CPU._r.f&0x10)?1:0; Ops.fz(CPU._r.a,1); if(CPU._r.a<0) CPU._r.f|=0x10; CPU._r.a&=255; CPU._r.m=1; CPU._r.t=4; },
    SBCHL: function() { CPU._r.a-=MemoryInterfacing.rb((CPU._r.h<<8)+CPU._r.l); CPU._r.a-=(CPU._r.f&0x10)?1:0; Ops.fz(CPU._r.a,1); if(CPU._r.a<0) CPU._r.f|=0x10; CPU._r.a&=255; CPU._r.m=2; CPU._r.t=8; },
    SBCn: function() { CPU._r.a-=MemoryInterfacing.rb(CPU._r.pc); CPU._r.pc++; CPU._r.a-=(CPU._r.f&0x10)?1:0; Ops.fz(CPU._r.a,1); if(CPU._r.a<0) CPU._r.f|=0x10; CPU._r.a&=255; CPU._r.m=2; CPU._r.t=8; },

    CPr_b: function() { let i=CPU._r.a; i-=CPU._r.b; Ops.fz(i,1); if(i<0) CPU._r.f|=0x10; i&=255; CPU._r.m=1; CPU._r.t=4; },
    CPr_c: function() { let i=CPU._r.a; i-=CPU._r.c; Ops.fz(i,1); if(i<0) CPU._r.f|=0x10; i&=255; CPU._r.m=1; CPU._r.t=4; },
    CPr_d: function() { let i=CPU._r.a; i-=CPU._r.d; Ops.fz(i,1); if(i<0) CPU._r.f|=0x10; i&=255; CPU._r.m=1; CPU._r.t=4; },
    CPr_e: function() { let i=CPU._r.a; i-=CPU._r.e; Ops.fz(i,1); if(i<0) CPU._r.f|=0x10; i&=255; CPU._r.m=1; CPU._r.t=4; },
    CPr_h: function() { let i=CPU._r.a; i-=CPU._r.h; Ops.fz(i,1); if(i<0) CPU._r.f|=0x10; i&=255; CPU._r.m=1; CPU._r.t=4; },
    CPr_l: function() { let i=CPU._r.a; i-=CPU._r.l; Ops.fz(i,1); if(i<0) CPU._r.f|=0x10; i&=255; CPU._r.m=1; CPU._r.t=4; },
    CPr_a: function() { let i=CPU._r.a; i-=CPU._r.a; Ops.fz(i,1); if(i<0) CPU._r.f|=0x10; i&=255; CPU._r.m=1; CPU._r.t=4; },
    CPHL: function() { let i=CPU._r.a; i-=MemoryInterfacing.rb((CPU._r.h<<8)+CPU._r.l); Ops.fz(i,1); if(i<0) CPU._r.f|=0x10; i&=255; CPU._r.m=2; CPU._r.t=8; },
    CPn: function() { let i=CPU._r.a; i-=MemoryInterfacing.rb(CPU._r.pc); CPU._r.pc++; Ops.fz(i,1); if(i<0) CPU._r.f|=0x10; i&=255; CPU._r.m=2; CPU._r.t=8; },

    ANDr_b: function() { CPU._r.a&=CPU._r.b; CPU._r.a&=255; Ops.fz(CPU._r.a); CPU._r.m=1; CPU._r.t=4; },
    ANDr_c: function() { CPU._r.a&=CPU._r.c; CPU._r.a&=255; Ops.fz(CPU._r.a); CPU._r.m=1; CPU._r.t=4; },
    ANDr_d: function() { CPU._r.a&=CPU._r.d; CPU._r.a&=255; Ops.fz(CPU._r.a); CPU._r.m=1; CPU._r.t=4; },
    ANDr_e: function() { CPU._r.a&=CPU._r.e; CPU._r.a&=255; Ops.fz(CPU._r.a); CPU._r.m=1; CPU._r.t=4; },
    ANDr_h: function() { CPU._r.a&=CPU._r.h; CPU._r.a&=255; Ops.fz(CPU._r.a); CPU._r.m=1; CPU._r.t=4; },
    ANDr_l: function() { CPU._r.a&=CPU._r.l; CPU._r.a&=255; Ops.fz(CPU._r.a); CPU._r.m=1; CPU._r.t=4; },
    ANDr_a: function() { CPU._r.a&=CPU._r.a; CPU._r.a&=255; Ops.fz(CPU._r.a); CPU._r.m=1; CPU._r.t=4; },
    ANDHL: function() { CPU._r.a&=MemoryInterfacing.rb((CPU._r.h<<8)+CPU._r.l); CPU._r.a&=255; Ops.fz(CPU._r.a); CPU._r.m=2; CPU._r.t=8; },
    ANDn: function() { CPU._r.a&=MemoryInterfacing.rb(CPU._r.pc); CPU._r.pc++; CPU._r.a&=255; Ops.fz(CPU._r.a); CPU._r.m=2; CPU._r.t=8; },

    ORr_b: function() { CPU._r.a|=CPU._r.b; CPU._r.a&=255; Ops.fz(CPU._r.a); CPU._r.m=1; CPU._r.t=4; },
    ORr_c: function() { CPU._r.a|=CPU._r.c; CPU._r.a&=255; Ops.fz(CPU._r.a); CPU._r.m=1; CPU._r.t=4; },
    ORr_d: function() { CPU._r.a|=CPU._r.d; CPU._r.a&=255; Ops.fz(CPU._r.a); CPU._r.m=1; CPU._r.t=4; },
    ORr_e: function() { CPU._r.a|=CPU._r.e; CPU._r.a&=255; Ops.fz(CPU._r.a); CPU._r.m=1; CPU._r.t=4; },
    ORr_h: function() { CPU._r.a|=CPU._r.h; CPU._r.a&=255; Ops.fz(CPU._r.a); CPU._r.m=1; CPU._r.t=4; },
    ORr_l: function() { CPU._r.a|=CPU._r.l; CPU._r.a&=255; Ops.fz(CPU._r.a); CPU._r.m=1; CPU._r.t=4; },
    ORr_a: function() { CPU._r.a|=CPU._r.a; CPU._r.a&=255; Ops.fz(CPU._r.a); CPU._r.m=1; CPU._r.t=4; },
    ORHL: function() { CPU._r.a|=MemoryInterfacing.rb((CPU._r.h<<8)+CPU._r.l); CPU._r.a&=255; Ops.fz(CPU._r.a); CPU._r.m=2; CPU._r.t=8; },
    ORn: function() { CPU._r.a|=MemoryInterfacing.rb(CPU._r.pc); CPU._r.pc++; CPU._r.a&=255; Ops.fz(CPU._r.a); CPU._r.m=2; CPU._r.t=8; },

    XORr_b: function() { CPU._r.a^=CPU._r.b; CPU._r.a&=255; Ops.fz(CPU._r.a); CPU._r.m=1; CPU._r.t=4; },
    XORr_c: function() { CPU._r.a^=CPU._r.c; CPU._r.a&=255; Ops.fz(CPU._r.a); CPU._r.m=1; CPU._r.t=4; },
    XORr_d: function() { CPU._r.a^=CPU._r.d; CPU._r.a&=255; Ops.fz(CPU._r.a); CPU._r.m=1; CPU._r.t=4; },
    XORr_e: function() { CPU._r.a^=CPU._r.e; CPU._r.a&=255; Ops.fz(CPU._r.a); CPU._r.m=1; CPU._r.t=4; },
    XORr_h: function() { CPU._r.a^=CPU._r.h; CPU._r.a&=255; Ops.fz(CPU._r.a); CPU._r.m=1; CPU._r.t=4; },
    XORr_l: function() { CPU._r.a^=CPU._r.l; CPU._r.a&=255; Ops.fz(CPU._r.a); CPU._r.m=1; CPU._r.t=4; },
    XORr_a: function() { CPU._r.a^=CPU._r.a; CPU._r.a&=255; Ops.fz(CPU._r.a); CPU._r.m=1; CPU._r.t=4; },
    XORHL: function() { CPU._r.a^=MemoryInterfacing.rb((CPU._r.h<<8)+CPU._r.l); CPU._r.a&=255; Ops.fz(CPU._r.a); CPU._r.m=2; CPU._r.t=8; },
    XORn: function() { CPU._r.a^=MemoryInterfacing.rb(CPU._r.pc); CPU._r.pc++; CPU._r.a&=255; Ops.fz(CPU._r.a); CPU._r.m=2; CPU._r.t=8; },

    INCr_b: function() { CPU._r.b++; CPU._r.b&=255; Ops.fz(CPU._r.b); CPU._r.m=1; CPU._r.t=4; },
    INCr_c: function() { CPU._r.c++; CPU._r.c&=255; Ops.fz(CPU._r.c); CPU._r.m=1; CPU._r.t=4; },
    INCr_d: function() { CPU._r.d++; CPU._r.d&=255; Ops.fz(CPU._r.d); CPU._r.m=1; CPU._r.t=4; },
    INCr_e: function() { CPU._r.e++; CPU._r.e&=255; Ops.fz(CPU._r.e); CPU._r.m=1; CPU._r.t=4; },
    INCr_h: function() { CPU._r.h++; CPU._r.h&=255; Ops.fz(CPU._r.h); CPU._r.m=1; CPU._r.t=4; },
    INCr_l: function() { CPU._r.l++; CPU._r.l&=255; Ops.fz(CPU._r.l); CPU._r.m=1; CPU._r.t=4; },
    INCr_a: function() { CPU._r.a++; CPU._r.a&=255; Ops.fz(CPU._r.a); CPU._r.m=1; CPU._r.t=4; },
    INCHLm: function() { let i=MemoryInterfacing.rb((CPU._r.h<<8)+CPU._r.l)+1; i&=255; MemoryInterfacing.wb((CPU._r.h<<8)+CPU._r.l,i); Ops.fz(i); CPU._r.m=3; CPU._r.t=12; },

    DECr_b: function() { CPU._r.b--; CPU._r.b&=255; Ops.fz(CPU._r.b); CPU._r.m=1; CPU._r.t=4; },
    DECr_c: function() { CPU._r.c--; CPU._r.c&=255; Ops.fz(CPU._r.c); CPU._r.m=1; CPU._r.t=4; },
    DECr_d: function() { CPU._r.d--; CPU._r.d&=255; Ops.fz(CPU._r.d); CPU._r.m=1; CPU._r.t=4; },
    DECr_e: function() { CPU._r.e--; CPU._r.e&=255; Ops.fz(CPU._r.e); CPU._r.m=1; CPU._r.t=4; },
    DECr_h: function() { CPU._r.h--; CPU._r.h&=255; Ops.fz(CPU._r.h); CPU._r.m=1; CPU._r.t=4; },
    DECr_l: function() { CPU._r.l--; CPU._r.l&=255; Ops.fz(CPU._r.l); CPU._r.m=1; CPU._r.t=4; },
    DECr_a: function() { CPU._r.a--; CPU._r.a&=255; Ops.fz(CPU._r.a); CPU._r.m=1; CPU._r.t=4; },
    DECHLm: function() { let i=MemoryInterfacing.rb((CPU._r.h<<8)+CPU._r.l)-1; i&=255; MemoryInterfacing.wb((CPU._r.h<<8)+CPU._r.l,i); Ops.fz(i); CPU._r.m=3; CPU._r.t=12; },

    INCBC: function() { CPU._r.c=(CPU._r.c+1)&255; if(!CPU._r.c) CPU._r.b=(CPU._r.b+1)&255; CPU._r.m=1; CPU._r.t=4; },
    INCDE: function() { CPU._r.e=(CPU._r.e+1)&255; if(!CPU._r.e) CPU._r.d=(CPU._r.d+1)&255; CPU._r.m=1; CPU._r.t=4; },
    INCHL: function() { CPU._r.l=(CPU._r.l+1)&255; if(!CPU._r.l) CPU._r.h=(CPU._r.h+1)&255; CPU._r.m=1; CPU._r.t=4; },
    INCSP: function() { CPU._r.sp=(CPU._r.sp+1)&65535; CPU._r.m=1; CPU._r.t=4; },

    DECBC: function() { CPU._r.c=(CPU._r.c-1)&255; if(CPU._r.c===255) CPU._r.b=(CPU._r.b-1)&255; CPU._r.m=1; CPU._r.t=4; },
    DECDE: function() { CPU._r.e=(CPU._r.e-1)&255; if(CPU._r.e===255) CPU._r.d=(CPU._r.d-1)&255; CPU._r.m=1; CPU._r.t=4; },
    DECHL: function() { CPU._r.l=(CPU._r.l-1)&255; if(CPU._r.l===255) CPU._r.h=(CPU._r.h-1)&255; CPU._r.m=1; CPU._r.t=4; },
    DECSP: function() { CPU._r.sp=(CPU._r.sp-1)&65535; CPU._r.m=1; CPU._r.t=4; },

    /*--- Bit manipulation ---*/
    BIT0b: function() { Ops.fz(CPU._r.b&0x01); CPU._r.m=2; CPU._r.t=8; },
    BIT0c: function() { Ops.fz(CPU._r.c&0x01); CPU._r.m=2; CPU._r.t=8; },
    BIT0d: function() { Ops.fz(CPU._r.d&0x01); CPU._r.m=2; CPU._r.t=8; },
    BIT0e: function() { Ops.fz(CPU._r.e&0x01); CPU._r.m=2; CPU._r.t=8; },
    BIT0h: function() { Ops.fz(CPU._r.h&0x01); CPU._r.m=2; CPU._r.t=8; },
    BIT0l: function() { Ops.fz(CPU._r.l&0x01); CPU._r.m=2; CPU._r.t=8; },
    BIT0a: function() { Ops.fz(CPU._r.a&0x01); CPU._r.m=2; CPU._r.t=8; },
    BIT0m: function() { Ops.fz(MemoryInterfacing.rb((CPU._r.h<<8)+CPU._r.l)&0x01); CPU._r.m=3; CPU._r.t=12; },

    BIT1b: function() { Ops.fz(CPU._r.b&0x02); CPU._r.m=2; CPU._r.t=8; },
    BIT1c: function() { Ops.fz(CPU._r.c&0x02); CPU._r.m=2; CPU._r.t=8; },
    BIT1d: function() { Ops.fz(CPU._r.d&0x02); CPU._r.m=2; CPU._r.t=8; },
    BIT1e: function() { Ops.fz(CPU._r.e&0x02); CPU._r.m=2; CPU._r.t=8; },
    BIT1h: function() { Ops.fz(CPU._r.h&0x02); CPU._r.m=2; CPU._r.t=8; },
    BIT1l: function() { Ops.fz(CPU._r.l&0x02); CPU._r.m=2; CPU._r.t=8; },
    BIT1a: function() { Ops.fz(CPU._r.a&0x02); CPU._r.m=2; CPU._r.t=8; },
    BIT1m: function() { Ops.fz(MemoryInterfacing.rb((CPU._r.h<<8)+CPU._r.l)&0x02); CPU._r.m=3; CPU._r.t=12; },

    BIT2b: function() { Ops.fz(CPU._r.b&0x04); CPU._r.m=2; CPU._r.t=8; },
    BIT2c: function() { Ops.fz(CPU._r.c&0x04); CPU._r.m=2; CPU._r.t=8; },
    BIT2d: function() { Ops.fz(CPU._r.d&0x04); CPU._r.m=2; CPU._r.t=8; },
    BIT2e: function() { Ops.fz(CPU._r.e&0x04); CPU._r.m=2; CPU._r.t=8; },
    BIT2h: function() { Ops.fz(CPU._r.h&0x04); CPU._r.m=2; CPU._r.t=8; },
    BIT2l: function() { Ops.fz(CPU._r.l&0x04); CPU._r.m=2; CPU._r.t=8; },
    BIT2a: function() { Ops.fz(CPU._r.a&0x04); CPU._r.m=2; CPU._r.t=8; },
    BIT2m: function() { Ops.fz(MemoryInterfacing.rb((CPU._r.h<<8)+CPU._r.l)&0x04); CPU._r.m=3; CPU._r.t=12; },

    BIT3b: function() { Ops.fz(CPU._r.b&0x08); CPU._r.m=2; CPU._r.t=8; },
    BIT3c: function() { Ops.fz(CPU._r.c&0x08); CPU._r.m=2; CPU._r.t=8; },
    BIT3d: function() { Ops.fz(CPU._r.d&0x08); CPU._r.m=2; CPU._r.t=8; },
    BIT3e: function() { Ops.fz(CPU._r.e&0x08); CPU._r.m=2; CPU._r.t=8; },
    BIT3h: function() { Ops.fz(CPU._r.h&0x08); CPU._r.m=2; CPU._r.t=8; },
    BIT3l: function() { Ops.fz(CPU._r.l&0x08); CPU._r.m=2; CPU._r.t=8; },
    BIT3a: function() { Ops.fz(CPU._r.a&0x08); CPU._r.m=2; CPU._r.t=8; },
    BIT3m: function() { Ops.fz(MemoryInterfacing.rb((CPU._r.h<<8)+CPU._r.l)&0x08); CPU._r.m=3; CPU._r.t=12; },

    BIT4b: function() { Ops.fz(CPU._r.b&0x10); CPU._r.m=2; CPU._r.t=8; },
    BIT4c: function() { Ops.fz(CPU._r.c&0x10); CPU._r.m=2; CPU._r.t=8; },
    BIT4d: function() { Ops.fz(CPU._r.d&0x10); CPU._r.m=2; CPU._r.t=8; },
    BIT4e: function() { Ops.fz(CPU._r.e&0x10); CPU._r.m=2; CPU._r.t=8; },
    BIT4h: function() { Ops.fz(CPU._r.h&0x10); CPU._r.m=2; CPU._r.t=8; },
    BIT4l: function() { Ops.fz(CPU._r.l&0x10); CPU._r.m=2; CPU._r.t=8; },
    BIT4a: function() { Ops.fz(CPU._r.a&0x10); CPU._r.m=2; CPU._r.t=8; },
    BIT4m: function() { Ops.fz(MemoryInterfacing.rb((CPU._r.h<<8)+CPU._r.l)&0x10); CPU._r.m=3; CPU._r.t=12; },

    BIT5b: function() { Ops.fz(CPU._r.b&0x20); CPU._r.m=2; CPU._r.t=8; },
    BIT5c: function() { Ops.fz(CPU._r.c&0x20); CPU._r.m=2; CPU._r.t=8; },
    BIT5d: function() { Ops.fz(CPU._r.d&0x20); CPU._r.m=2; CPU._r.t=8; },
    BIT5e: function() { Ops.fz(CPU._r.e&0x20); CPU._r.m=2; CPU._r.t=8; },
    BIT5h: function() { Ops.fz(CPU._r.h&0x20); CPU._r.m=2; CPU._r.t=8; },
    BIT5l: function() { Ops.fz(CPU._r.l&0x20); CPU._r.m=2; CPU._r.t=8; },
    BIT5a: function() { Ops.fz(CPU._r.a&0x20); CPU._r.m=2; CPU._r.t=8; },
    BIT5m: function() { Ops.fz(MemoryInterfacing.rb((CPU._r.h<<8)+CPU._r.l)&0x20); CPU._r.m=3; CPU._r.t=12; },

    BIT6b: function() { Ops.fz(CPU._r.b&0x40); CPU._r.m=2; CPU._r.t=8; },
    BIT6c: function() { Ops.fz(CPU._r.c&0x40); CPU._r.m=2; CPU._r.t=8; },
    BIT6d: function() { Ops.fz(CPU._r.d&0x40); CPU._r.m=2; CPU._r.t=8; },
    BIT6e: function() { Ops.fz(CPU._r.e&0x40); CPU._r.m=2; CPU._r.t=8; },
    BIT6h: function() { Ops.fz(CPU._r.h&0x40); CPU._r.m=2; CPU._r.t=8; },
    BIT6l: function() { Ops.fz(CPU._r.l&0x40); CPU._r.m=2; CPU._r.t=8; },
    BIT6a: function() { Ops.fz(CPU._r.a&0x40); CPU._r.m=2; CPU._r.t=8; },
    BIT6m: function() { Ops.fz(MemoryInterfacing.rb((CPU._r.h<<8)+CPU._r.l)&0x40); CPU._r.m=3; CPU._r.t=12; },

    BIT7b: function() { Ops.fz(CPU._r.b&0x80); CPU._r.m=2; CPU._r.t=8; },
    BIT7c: function() { Ops.fz(CPU._r.c&0x80); CPU._r.m=2; CPU._r.t=8; },
    BIT7d: function() { Ops.fz(CPU._r.d&0x80); CPU._r.m=2; CPU._r.t=8; },
    BIT7e: function() { Ops.fz(CPU._r.e&0x80); CPU._r.m=2; CPU._r.t=8; },
    BIT7h: function() { Ops.fz(CPU._r.h&0x80); CPU._r.m=2; CPU._r.t=8; },
    BIT7l: function() { Ops.fz(CPU._r.l&0x80); CPU._r.m=2; CPU._r.t=8; },
    BIT7a: function() { Ops.fz(CPU._r.a&0x80); CPU._r.m=2; CPU._r.t=8; },
    BIT7m: function() { Ops.fz(MemoryInterfacing.rb((CPU._r.h<<8)+CPU._r.l)&0x80); CPU._r.m=3; CPU._r.t=12; },

    RLA: function() { let ci=CPU._r.f&0x10?1:0; let co=CPU._r.a&0x80?0x10:0; CPU._r.a=(CPU._r.a<<1)+ci; CPU._r.a&=255; CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=1; CPU._r.t=4; },
    RLCA: function() { let ci=CPU._r.a&0x80?1:0; let co=CPU._r.a&0x80?0x10:0; CPU._r.a=(CPU._r.a<<1)+ci; CPU._r.a&=255; CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=1; CPU._r.t=4; },
    RRA: function() { let ci=CPU._r.f&0x10?0x80:0; let co=CPU._r.a&1?0x10:0; CPU._r.a=(CPU._r.a>>1)+ci; CPU._r.a&=255; CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=1; CPU._r.t=4; },
    RRCA: function() { let ci=CPU._r.a&1?0x80:0; let co=CPU._r.a&1?0x10:0; CPU._r.a=(CPU._r.a>>1)+ci; CPU._r.a&=255; CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=1; CPU._r.t=4; },

    RLr_b: function() { let ci=CPU._r.f&0x10?1:0; let co=CPU._r.b&0x80?0x10:0; CPU._r.b=(CPU._r.b<<1)+ci; CPU._r.b&=255; Ops.fz(CPU._r.b); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    RLr_c: function() { let ci=CPU._r.f&0x10?1:0; let co=CPU._r.c&0x80?0x10:0; CPU._r.c=(CPU._r.c<<1)+ci; CPU._r.c&=255; Ops.fz(CPU._r.c); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    RLr_d: function() { let ci=CPU._r.f&0x10?1:0; let co=CPU._r.d&0x80?0x10:0; CPU._r.d=(CPU._r.d<<1)+ci; CPU._r.d&=255; Ops.fz(CPU._r.d); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    RLr_e: function() { let ci=CPU._r.f&0x10?1:0; let co=CPU._r.e&0x80?0x10:0; CPU._r.e=(CPU._r.e<<1)+ci; CPU._r.e&=255; Ops.fz(CPU._r.e); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    RLr_h: function() { let ci=CPU._r.f&0x10?1:0; let co=CPU._r.h&0x80?0x10:0; CPU._r.h=(CPU._r.h<<1)+ci; CPU._r.h&=255; Ops.fz(CPU._r.h); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    RLr_l: function() { let ci=CPU._r.f&0x10?1:0; let co=CPU._r.l&0x80?0x10:0; CPU._r.l=(CPU._r.l<<1)+ci; CPU._r.l&=255; Ops.fz(CPU._r.l); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    RLr_a: function() { let ci=CPU._r.f&0x10?1:0; let co=CPU._r.a&0x80?0x10:0; CPU._r.a=(CPU._r.a<<1)+ci; CPU._r.a&=255; Ops.fz(CPU._r.a); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    RLHL: function() { let i=MemoryInterfacing.rb((CPU._r.h<<8)+CPU._r.l); let ci=CPU._r.f&0x10?1:0; let co=i&0x80?0x10:0; i=(i<<1)+ci; i&=255; Ops.fz(i); MemoryInterfacing.wb((CPU._r.h<<8)+CPU._r.l,i); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=4; CPU._r.t=16; },

    RLCr_b: function() { let ci=CPU._r.b&0x80?1:0; let co=CPU._r.b&0x80?0x10:0; CPU._r.b=(CPU._r.b<<1)+ci; CPU._r.b&=255; Ops.fz(CPU._r.b); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    RLCr_c: function() { let ci=CPU._r.c&0x80?1:0; let co=CPU._r.c&0x80?0x10:0; CPU._r.c=(CPU._r.c<<1)+ci; CPU._r.c&=255; Ops.fz(CPU._r.c); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    RLCr_d: function() { let ci=CPU._r.d&0x80?1:0; let co=CPU._r.d&0x80?0x10:0; CPU._r.d=(CPU._r.d<<1)+ci; CPU._r.d&=255; Ops.fz(CPU._r.d); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    RLCr_e: function() { let ci=CPU._r.e&0x80?1:0; let co=CPU._r.e&0x80?0x10:0; CPU._r.e=(CPU._r.e<<1)+ci; CPU._r.e&=255; Ops.fz(CPU._r.e); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    RLCr_h: function() { let ci=CPU._r.h&0x80?1:0; let co=CPU._r.h&0x80?0x10:0; CPU._r.h=(CPU._r.h<<1)+ci; CPU._r.h&=255; Ops.fz(CPU._r.h); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    RLCr_l: function() { let ci=CPU._r.l&0x80?1:0; let co=CPU._r.l&0x80?0x10:0; CPU._r.l=(CPU._r.l<<1)+ci; CPU._r.l&=255; Ops.fz(CPU._r.l); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    RLCr_a: function() { let ci=CPU._r.a&0x80?1:0; let co=CPU._r.a&0x80?0x10:0; CPU._r.a=(CPU._r.a<<1)+ci; CPU._r.a&=255; Ops.fz(CPU._r.a); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    RLCHL: function() { let i=MemoryInterfacing.rb((CPU._r.h<<8)+CPU._r.l); let ci=i&0x80?1:0; let co=i&0x80?0x10:0; i=(i<<1)+ci; i&=255; Ops.fz(i); MemoryInterfacing.wb((CPU._r.h<<8)+CPU._r.l,i); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=4; CPU._r.t=16; },

    RRr_b: function() { let ci=CPU._r.f&0x10?0x80:0; let co=CPU._r.b&1?0x10:0; CPU._r.b=(CPU._r.b>>1)+ci; CPU._r.b&=255; Ops.fz(CPU._r.b); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    RRr_c: function() { let ci=CPU._r.f&0x10?0x80:0; let co=CPU._r.c&1?0x10:0; CPU._r.c=(CPU._r.c>>1)+ci; CPU._r.c&=255; Ops.fz(CPU._r.c); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    RRr_d: function() { let ci=CPU._r.f&0x10?0x80:0; let co=CPU._r.d&1?0x10:0; CPU._r.d=(CPU._r.d>>1)+ci; CPU._r.d&=255; Ops.fz(CPU._r.d); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    RRr_e: function() { let ci=CPU._r.f&0x10?0x80:0; let co=CPU._r.e&1?0x10:0; CPU._r.e=(CPU._r.e>>1)+ci; CPU._r.e&=255; Ops.fz(CPU._r.e); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    RRr_h: function() { let ci=CPU._r.f&0x10?0x80:0; let co=CPU._r.h&1?0x10:0; CPU._r.h=(CPU._r.h>>1)+ci; CPU._r.h&=255; Ops.fz(CPU._r.h); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    RRr_l: function() { let ci=CPU._r.f&0x10?0x80:0; let co=CPU._r.l&1?0x10:0; CPU._r.l=(CPU._r.l>>1)+ci; CPU._r.l&=255; Ops.fz(CPU._r.l); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    RRr_a: function() { let ci=CPU._r.f&0x10?0x80:0; let co=CPU._r.a&1?0x10:0; CPU._r.a=(CPU._r.a>>1)+ci; CPU._r.a&=255; Ops.fz(CPU._r.a); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    RRHL: function() { let i=MemoryInterfacing.rb((CPU._r.h<<8)+CPU._r.l); let ci=CPU._r.f&0x10?0x80:0; let co=i&1?0x10:0; i=(i>>1)+ci; i&=255; MemoryInterfacing.wb((CPU._r.h<<8)+CPU._r.l,i); Ops.fz(i); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=4; CPU._r.t=16; },

    RRCr_b: function() { let ci=CPU._r.b&1?0x80:0; let co=CPU._r.b&1?0x10:0; CPU._r.b=(CPU._r.b>>1)+ci; CPU._r.b&=255; Ops.fz(CPU._r.b); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    RRCr_c: function() { let ci=CPU._r.c&1?0x80:0; let co=CPU._r.c&1?0x10:0; CPU._r.c=(CPU._r.c>>1)+ci; CPU._r.c&=255; Ops.fz(CPU._r.c); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    RRCr_d: function() { let ci=CPU._r.d&1?0x80:0; let co=CPU._r.d&1?0x10:0; CPU._r.d=(CPU._r.d>>1)+ci; CPU._r.d&=255; Ops.fz(CPU._r.d); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    RRCr_e: function() { let ci=CPU._r.e&1?0x80:0; let co=CPU._r.e&1?0x10:0; CPU._r.e=(CPU._r.e>>1)+ci; CPU._r.e&=255; Ops.fz(CPU._r.e); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    RRCr_h: function() { let ci=CPU._r.h&1?0x80:0; let co=CPU._r.h&1?0x10:0; CPU._r.h=(CPU._r.h>>1)+ci; CPU._r.h&=255; Ops.fz(CPU._r.h); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    RRCr_l: function() { let ci=CPU._r.l&1?0x80:0; let co=CPU._r.l&1?0x10:0; CPU._r.l=(CPU._r.l>>1)+ci; CPU._r.l&=255; Ops.fz(CPU._r.l); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    RRCr_a: function() { let ci=CPU._r.a&1?0x80:0; let co=CPU._r.a&1?0x10:0; CPU._r.a=(CPU._r.a>>1)+ci; CPU._r.a&=255; Ops.fz(CPU._r.a); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    RRCHL: function() { let i=MemoryInterfacing.rb((CPU._r.h<<8)+CPU._r.l); let ci=i&1?0x80:0; let co=i&1?0x10:0; i=(i>>1)+ci; i&=255; MemoryInterfacing.wb((CPU._r.h<<8)+CPU._r.l,i); Ops.fz(i); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=4; CPU._r.t=16; },

    SLAr_b: function() { let co=CPU._r.b&0x80?0x10:0; CPU._r.b=(CPU._r.b<<1)&255; Ops.fz(CPU._r.b); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    SLAr_c: function() { let co=CPU._r.c&0x80?0x10:0; CPU._r.c=(CPU._r.c<<1)&255; Ops.fz(CPU._r.c); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    SLAr_d: function() { let co=CPU._r.d&0x80?0x10:0; CPU._r.d=(CPU._r.d<<1)&255; Ops.fz(CPU._r.d); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    SLAr_e: function() { let co=CPU._r.e&0x80?0x10:0; CPU._r.e=(CPU._r.e<<1)&255; Ops.fz(CPU._r.e); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    SLAr_h: function() { let co=CPU._r.h&0x80?0x10:0; CPU._r.h=(CPU._r.h<<1)&255; Ops.fz(CPU._r.h); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    SLAr_l: function() { let co=CPU._r.l&0x80?0x10:0; CPU._r.l=(CPU._r.l<<1)&255; Ops.fz(CPU._r.l); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    SLAr_a: function() { let co=CPU._r.a&0x80?0x10:0; CPU._r.a=(CPU._r.a<<1)&255; Ops.fz(CPU._r.a); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },

    SLLr_b: function() { let co=CPU._r.b&0x80?0x10:0; CPU._r.b=(CPU._r.b<<1)&255+1; Ops.fz(CPU._r.b); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    SLLr_c: function() { let co=CPU._r.c&0x80?0x10:0; CPU._r.c=(CPU._r.c<<1)&255+1; Ops.fz(CPU._r.c); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    SLLr_d: function() { let co=CPU._r.d&0x80?0x10:0; CPU._r.d=(CPU._r.d<<1)&255+1; Ops.fz(CPU._r.d); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    SLLr_e: function() { let co=CPU._r.e&0x80?0x10:0; CPU._r.e=(CPU._r.e<<1)&255+1; Ops.fz(CPU._r.e); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    SLLr_h: function() { let co=CPU._r.h&0x80?0x10:0; CPU._r.h=(CPU._r.h<<1)&255+1; Ops.fz(CPU._r.h); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    SLLr_l: function() { let co=CPU._r.l&0x80?0x10:0; CPU._r.l=(CPU._r.l<<1)&255+1; Ops.fz(CPU._r.l); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    SLLr_a: function() { let co=CPU._r.a&0x80?0x10:0; CPU._r.a=(CPU._r.a<<1)&255+1; Ops.fz(CPU._r.a); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },

    SRAr_b: function() { let ci=CPU._r.b&0x80; let co=CPU._r.b&1?0x10:0; CPU._r.b=((CPU._r.b>>1)+ci)&255; Ops.fz(CPU._r.b); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    SRAr_c: function() { let ci=CPU._r.c&0x80; let co=CPU._r.c&1?0x10:0; CPU._r.c=((CPU._r.c>>1)+ci)&255; Ops.fz(CPU._r.c); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    SRAr_d: function() { let ci=CPU._r.d&0x80; let co=CPU._r.d&1?0x10:0; CPU._r.d=((CPU._r.d>>1)+ci)&255; Ops.fz(CPU._r.d); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    SRAr_e: function() { let ci=CPU._r.e&0x80; let co=CPU._r.e&1?0x10:0; CPU._r.e=((CPU._r.e>>1)+ci)&255; Ops.fz(CPU._r.e); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    SRAr_h: function() { let ci=CPU._r.h&0x80; let co=CPU._r.h&1?0x10:0; CPU._r.h=((CPU._r.h>>1)+ci)&255; Ops.fz(CPU._r.h); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    SRAr_l: function() { let ci=CPU._r.l&0x80; let co=CPU._r.l&1?0x10:0; CPU._r.l=((CPU._r.l>>1)+ci)&255; Ops.fz(CPU._r.l); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    SRAr_a: function() { let ci=CPU._r.a&0x80; let co=CPU._r.a&1?0x10:0; CPU._r.a=((CPU._r.a>>1)+ci)&255; Ops.fz(CPU._r.a); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },

    SRLr_b: function() { let co=CPU._r.b&1?0x10:0; CPU._r.b=(CPU._r.b>>1)&255; Ops.fz(CPU._r.b); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    SRLr_c: function() { let co=CPU._r.c&1?0x10:0; CPU._r.c=(CPU._r.c>>1)&255; Ops.fz(CPU._r.c); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    SRLr_d: function() { let co=CPU._r.d&1?0x10:0; CPU._r.d=(CPU._r.d>>1)&255; Ops.fz(CPU._r.d); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    SRLr_e: function() { let co=CPU._r.e&1?0x10:0; CPU._r.e=(CPU._r.e>>1)&255; Ops.fz(CPU._r.e); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    SRLr_h: function() { let co=CPU._r.h&1?0x10:0; CPU._r.h=(CPU._r.h>>1)&255; Ops.fz(CPU._r.h); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    SRLr_l: function() { let co=CPU._r.l&1?0x10:0; CPU._r.l=(CPU._r.l>>1)&255; Ops.fz(CPU._r.l); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },
    SRLr_a: function() { let co=CPU._r.a&1?0x10:0; CPU._r.a=(CPU._r.a>>1)&255; Ops.fz(CPU._r.a); CPU._r.f=(CPU._r.f&0xEF)+co; CPU._r.m=2; CPU._r.t=8; },

    CPL: function() { CPU._r.a = (~CPU._r.a)&255; Ops.fz(CPU._r.a,1); CPU._r.m=1; CPU._r.t=4; },
    NEG: function() { CPU._r.a=0-CPU._r.a; Ops.fz(CPU._r.a,1); if(CPU._r.a<0) CPU._r.f|=0x10; CPU._r.a&=255; CPU._r.m=2; CPU._r.t=8; },

    CCF: function() { let ci=CPU._r.f&0x10?0:0x10; CPU._r.f=(CPU._r.f&0xEF)+ci; CPU._r.m=1; CPU._r.t=4; },
    SCF: function() { CPU._r.f|=0x10; CPU._r.m=1; CPU._r.t=4; },

    /*--- Stack ---*/
    PUSHBC: function() { CPU._r.sp--; MemoryInterfacing.wb(CPU._r.sp,CPU._r.b); CPU._r.sp--; MemoryInterfacing.wb(CPU._r.sp,CPU._r.c); CPU._r.m=3; CPU._r.t=12; },
    PUSHDE: function() { CPU._r.sp--; MemoryInterfacing.wb(CPU._r.sp,CPU._r.d); CPU._r.sp--; MemoryInterfacing.wb(CPU._r.sp,CPU._r.e); CPU._r.m=3; CPU._r.t=12; },
    PUSHHL: function() { CPU._r.sp--; MemoryInterfacing.wb(CPU._r.sp,CPU._r.h); CPU._r.sp--; MemoryInterfacing.wb(CPU._r.sp,CPU._r.l); CPU._r.m=3; CPU._r.t=12; },
    PUSHAF: function() { CPU._r.sp--; MemoryInterfacing.wb(CPU._r.sp,CPU._r.a); CPU._r.sp--; MemoryInterfacing.wb(CPU._r.sp,CPU._r.f); CPU._r.m=3; CPU._r.t=12; },

    POPBC: function() { CPU._r.c=MemoryInterfacing.rb(CPU._r.sp); CPU._r.sp++; CPU._r.b=MemoryInterfacing.rb(CPU._r.sp); CPU._r.sp++; CPU._r.m=3; CPU._r.t=12; },
    POPDE: function() { CPU._r.e=MemoryInterfacing.rb(CPU._r.sp); CPU._r.sp++; CPU._r.d=MemoryInterfacing.rb(CPU._r.sp); CPU._r.sp++; CPU._r.m=3; CPU._r.t=12; },
    POPHL: function() { CPU._r.l=MemoryInterfacing.rb(CPU._r.sp); CPU._r.sp++; CPU._r.h=MemoryInterfacing.rb(CPU._r.sp); CPU._r.sp++; CPU._r.m=3; CPU._r.t=12; },
    POPAF: function() { CPU._r.f=MemoryInterfacing.rb(CPU._r.sp); CPU._r.sp++; CPU._r.a=MemoryInterfacing.rb(CPU._r.sp); CPU._r.sp++; CPU._r.m=3; CPU._r.t=12; },

    /*--- Jump ---*/
    JPnn: function() { CPU._r.pc = MemoryInterfacing.rw(CPU._r.pc); CPU._r.m=3; CPU._r.t=12; },
    JPHL: function() { CPU._r.pc=CPU._r.hl; CPU._r.m=1; CPU._r.t=4; },
    JPNZnn: function() { CPU._r.m=3; CPU._r.t=12; if((CPU._r.f&0x80)===0x00) { CPU._r.pc=MemoryInterfacing.rw(CPU._r.pc); CPU._r.m++; CPU._r.t+=4; } else CPU._r.pc+=2; },
    JPZnn: function()  { CPU._r.m=3; CPU._r.t=12; if((CPU._r.f&0x80)===0x80) { CPU._r.pc=MemoryInterfacing.rw(CPU._r.pc); CPU._r.m++; CPU._r.t+=4; } else CPU._r.pc+=2; },
    JPNCnn: function() { CPU._r.m=3; CPU._r.t=12; if((CPU._r.f&0x10)===0x00) { CPU._r.pc=MemoryInterfacing.rw(CPU._r.pc); CPU._r.m++; CPU._r.t+=4; } else CPU._r.pc+=2; },
    JPCnn: function()  { CPU._r.m=3; CPU._r.t=12; if((CPU._r.f&0x10)===0x10) { CPU._r.pc=MemoryInterfacing.rw(CPU._r.pc); CPU._r.m++; CPU._r.t+=4; } else CPU._r.pc+=2; },

    JRn: function() { let i=MemoryInterfacing.rb(CPU._r.pc); if(i>127) i=-((~i+1)&255); CPU._r.pc++; CPU._r.m=2; CPU._r.t=8; CPU._r.pc+=i; CPU._r.m++; CPU._r.t+=4; },
    JRNZn: function() { let i=MemoryInterfacing.rb(CPU._r.pc); if(i>127) i=-((~i+1)&255); CPU._r.pc++; CPU._r.m=2; CPU._r.t=8; if((CPU._r.f&0x80)===0x00) { CPU._r.pc+=i; CPU._r.m++; CPU._r.t+=4; } },
    JRZn: function()  { let i=MemoryInterfacing.rb(CPU._r.pc); if(i>127) i=-((~i+1)&255); CPU._r.pc++; CPU._r.m=2; CPU._r.t=8; if((CPU._r.f&0x80)===0x80) { CPU._r.pc+=i; CPU._r.m++; CPU._r.t+=4; } },
    JRNCn: function() { let i=MemoryInterfacing.rb(CPU._r.pc); if(i>127) i=-((~i+1)&255); CPU._r.pc++; CPU._r.m=2; CPU._r.t=8; if((CPU._r.f&0x10)===0x00) { CPU._r.pc+=i; CPU._r.m++; CPU._r.t+=4; } },
    JRCn: function()  { let i=MemoryInterfacing.rb(CPU._r.pc); if(i>127) i=-((~i+1)&255); CPU._r.pc++; CPU._r.m=2; CPU._r.t=8; if((CPU._r.f&0x10)===0x10) { CPU._r.pc+=i; CPU._r.m++; CPU._r.t+=4; } },

    DJNZn: function() { let i=MemoryInterfacing.rb(CPU._r.pc); if(i>127) i=-((~i+1)&255); CPU._r.pc++; CPU._r.m=2; CPU._r.t=8; CPU._r.b--; if(CPU._r.b) { CPU._r.pc+=i; CPU._r.m++; CPU._r.t+=4; } },

    CALLnn: function() { CPU._r.sp-=2; MemoryInterfacing.ww(CPU._r.sp,CPU._r.pc+2); CPU._r.pc=MemoryInterfacing.rw(CPU._r.pc); CPU._r.m=5; CPU._r.t=20; },
    CALLNZnn: function() { CPU._r.m=3; CPU._r.t=12; if((CPU._r.f&0x80)===0x00) { CPU._r.sp-=2; MemoryInterfacing.ww(CPU._r.sp,CPU._r.pc+2); CPU._r.pc=MemoryInterfacing.rw(CPU._r.pc); CPU._r.m+=2; CPU._r.t+=8; } else CPU._r.pc+=2; },
    CALLZnn: function() { CPU._r.m=3; CPU._r.t=12; if((CPU._r.f&0x80)===0x80) { CPU._r.sp-=2; MemoryInterfacing.ww(CPU._r.sp,CPU._r.pc+2); CPU._r.pc=MemoryInterfacing.rw(CPU._r.pc); CPU._r.m+=2; CPU._r.t+=8; } else CPU._r.pc+=2; },
    CALLNCnn: function() { CPU._r.m=3; CPU._r.t=12; if((CPU._r.f&0x10)===0x00) { CPU._r.sp-=2; MemoryInterfacing.ww(CPU._r.sp,CPU._r.pc+2); CPU._r.pc=MemoryInterfacing.rw(CPU._r.pc); CPU._r.m+=2; CPU._r.t+=8; } else CPU._r.pc+=2; },
    CALLCnn: function() { CPU._r.m=3; CPU._r.t=12; if((CPU._r.f&0x10)===0x10) { CPU._r.sp-=2; MemoryInterfacing.ww(CPU._r.sp,CPU._r.pc+2); CPU._r.pc=MemoryInterfacing.rw(CPU._r.pc); CPU._r.m+=2; CPU._r.t+=8; } else CPU._r.pc+=2; },

    RET: function() { CPU._r.pc=MemoryInterfacing.rw(CPU._r.sp); CPU._r.sp+=2; CPU._r.m=3; CPU._r.t=12; },
    RETI: function() { CPU._r.ime=1; CPU._r.pc=MemoryInterfacing.rw(CPU._r.sp); CPU._r.sp+=2; CPU._r.m=3; CPU._r.t=12; },
    RETNZ: function() { CPU._r.m=1; CPU._r.t=4; if((CPU._r.f&0x80)===0x00) { CPU._r.pc=MemoryInterfacing.rw(CPU._r.sp); CPU._r.sp+=2; CPU._r.m+=2; CPU._r.t+=8; } },
    RETZ: function() { CPU._r.m=1; CPU._r.t=4; if((CPU._r.f&0x80)===0x80) { CPU._r.pc=MemoryInterfacing.rw(CPU._r.sp); CPU._r.sp+=2; CPU._r.m+=2; CPU._r.t+=8; } },
    RETNC: function() { CPU._r.m=1; CPU._r.t=4; if((CPU._r.f&0x10)===0x00) { CPU._r.pc=MemoryInterfacing.rw(CPU._r.sp); CPU._r.sp+=2; CPU._r.m+=2; CPU._r.t+=8; } },
    RETC: function() { CPU._r.m=1; CPU._r.t=4; if((CPU._r.f&0x10)===0x10) { CPU._r.pc=MemoryInterfacing.rw(CPU._r.sp); CPU._r.sp+=2; CPU._r.m+=2; CPU._r.t+=8; } },

    RST00: function() { CPU._r.sp-=2; MemoryInterfacing.ww(CPU._r.sp,CPU._r.pc); CPU._r.pc=0x00; CPU._r.m=3; CPU._r.t=12; },
    RST08: function() { CPU._r.sp-=2; MemoryInterfacing.ww(CPU._r.sp,CPU._r.pc); CPU._r.pc=0x08; CPU._r.m=3; CPU._r.t=12; },
    RST10: function() { CPU._r.sp-=2; MemoryInterfacing.ww(CPU._r.sp,CPU._r.pc); CPU._r.pc=0x10; CPU._r.m=3; CPU._r.t=12; },
    RST18: function() { CPU._r.sp-=2; MemoryInterfacing.ww(CPU._r.sp,CPU._r.pc); CPU._r.pc=0x18; CPU._r.m=3; CPU._r.t=12; },
    RST20: function() { CPU._r.sp-=2; MemoryInterfacing.ww(CPU._r.sp,CPU._r.pc); CPU._r.pc=0x20; CPU._r.m=3; CPU._r.t=12; },
    RST28: function() { CPU._r.sp-=2; MemoryInterfacing.ww(CPU._r.sp,CPU._r.pc); CPU._r.pc=0x28; CPU._r.m=3; CPU._r.t=12; },
    RST30: function() { CPU._r.sp-=2; MemoryInterfacing.ww(CPU._r.sp,CPU._r.pc); CPU._r.pc=0x30; CPU._r.m=3; CPU._r.t=12; },
    RST38: function() { CPU._r.sp-=2; MemoryInterfacing.ww(CPU._r.sp,CPU._r.pc); CPU._r.pc=0x38; CPU._r.m=3; CPU._r.t=12; },
    RST40: function() { CPU._r.sp-=2; MemoryInterfacing.ww(CPU._r.sp,CPU._r.pc); CPU._r.pc=0x40; CPU._r.m=3; CPU._r.t=12; },
    RST48: function() { CPU._r.sp-=2; MemoryInterfacing.ww(CPU._r.sp,CPU._r.pc); CPU._r.pc=0x48; CPU._r.m=3; CPU._r.t=12; },
    RST50: function() { CPU._r.sp-=2; MemoryInterfacing.ww(CPU._r.sp,CPU._r.pc); CPU._r.pc=0x50; CPU._r.m=3; CPU._r.t=12; },
    RST58: function() { CPU._r.sp-=2; MemoryInterfacing.ww(CPU._r.sp,CPU._r.pc); CPU._r.pc=0x58; CPU._r.m=3; CPU._r.t=12; },
    RST60: function() { CPU._r.sp-=2; MemoryInterfacing.ww(CPU._r.sp,CPU._r.pc); CPU._r.pc=0x60; CPU._r.m=3; CPU._r.t=12; },

    NOP: function() { CPU._r.m=1; CPU._r.t=4; },
    HALT: function() { CPU._halt=1; CPU._r.m=1; CPU._r.t=4; },

    DI: function() { CPU._r.ime=0; CPU._r.m=1; CPU._r.t=4; },
    EI: function() { CPU._r.ime=1; CPU._r.m=1; CPU._r.t=4; },

    /*--- Helper functions ---*/
    fz: function(i,as) { CPU._r.f=0; if(!(i&255)) CPU._r.f|=128; CPU._r.f|=as?0x40:0; },
    MAPcb: function() {
      let i=MemoryInterfacing.rb(CPU._r.pc); CPU._r.pc++;
      CPU._r.pc &= 65535;
      if(CPU._cbmap[i]) CPU._cbmap[i]();
      else alert(i);
    },

    XX: function() {
      /*Undefined map entry*/
      let opc = CPU._r.pc-1;
      alert('Unimplemented instruction at $'+opc.toString(16)+', stopping.');
      CPU._stop=1;
    }
}

export default Ops;
